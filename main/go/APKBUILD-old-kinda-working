# Maintainer: Eivind Uggedal <eivind@uggedal.com>
pkgname=go
pkgver=1.4.2
pkgrel=1
pkgdesc="Go programming language compiler"
url="http://www.golang.org/"
arch="x86 x86_64 armhf"
license="BSD"
depends=""
depends_dev=""
makedepends="bash perl mercurial"
options="!strip"
install=""

source="
	http://golang.org/dl/go${pkgver}.src.tar.gz
	no-werror.patch
	no-pic.patch
	no-longjmp-redefine.patch
	fix-arm-hackery.patch
	"

_builddir="$srcdir"/$pkgname
_toolrepo=golang.org/x/tools/cmd
_tooltag=release-branch.go1.4

prepare() {
	local i
	cd "$_builddir"
	for i in $source; do
		case $i in
		*.patch) msg $i; patch -p1 -i "$srcdir"/$i || return 1;;
		esac
	done
}

build() {
	export GOPATH="$srcdir"
	export GOROOT="$_builddir"
	export GOBIN="$GOROOT"/bin
	export GOROOT_FINAL=/usr/lib/go
	# ccache breaks build for some reason
	unset CC

	case "$CARCH" in
	x86) GOARCH=386;;
	x86_64) GOARCH=amd64;;
	arm*) GOARCH=arm; export GOARM=6;;
	*) return 1;;
	esac
	export GOARCH

	cd "$_builddir/src"

	./make.bash || return 1

	# FIXME: race and bench tests fail:
	#PATH="$GOROOT/bin:$PATH" ./run.bash --no-rebuild --banner || return 1

	# Build tools provided with the upstream binary distribution:
	# $GOROOT/bin/go get -d $_toolrepo/godoc
	# $GOROOT/bin/go install $_toolrepo/godoc

	$GOROOT/bin/go get -d $_toolrepo/...
	(
		cd $GOPATH/src/$_toolrepo
		git checkout $_tooltag
	)
	$GOROOT/bin/go build -o $GOPATH/src/godoc $_toolrepo/godoc
	local tool
	for tool in cover vet; do
		$GOROOT/bin/go build -o $GOROOT/pkg/tool/${GOOS}_${GOARCH}/${tool} $_toolrepo/${tool}
	done
}

package() {
	local f d
	cd "$_builddir"

	install -Dm755 "$GOPATH/src/godoc" "$pkgdir/usr/bin/godoc"


	install -dm755 "$pkgdir/usr/bin"
	for f in go gofmt; do
		install -m755 bin/$f "$pkgdir/usr/bin"
	done

	install -dm755 "$pkgdir/usr/lib/go"

	# The source needs to be installed due to an upstream
	# bug (http://code.google.com/p/go/issues/detail?id=2775).
	# When this is resolved we can split out the source to a
	# go-doc sub package.
	install -dm755 "$pkgdir/usr/lib/go/src"
  cp -a bin "$pkgdir/usr"
  cp -a pkg "$pkgdir/usr/lib/go"
  cp -a "$GOROOT/src" "$pkgdir/usr/lib/go/"
  cp -a "$GOROOT/src/cmd" "$pkgdir/usr/lib/go/src/cmd"
  cp -a "$GOROOT/src/lib9" "$pkgdir/usr/lib/go/src/"
  cp -a "$GOROOT/lib" "$pkgdir/usr/lib/go/"
  cp -a "$GOROOT/include" "$pkgdir/usr/lib/go/"

}

# tools() {
# 	local tool
#
# 	pkgdesc="Go programming language tools"
# 	depends="$pkgname"
#
# 	install -Dm755 "$_builddir"/bin/godoc "$subpkgdir"/usr/bin/godoc
#
# 	install -dm755 "$subpkgdir"/usr/lib/go/pkg/tool/linux_$GOARCH
#
# 	for tool in cover vet; do
# 		mv "$pkgdir"/usr/lib/go/pkg/tool/linux_$GOARCH/$tool \
# 			"$subpkgdir"/usr/lib/go/pkg/tool/linux_$GOARCH/$tool
# 	done
#
# 	# Make documentation for tools available through godoc:
# 	for tool in cover vet godoc; do
# 		install -dm755 "$subpkgdir"/usr/lib/go/src/pkg/$tool
# 		sed -e 's/^package main$/package documentation/' \
# 			"$srcdir"/src/$_toolrepo/cmd/$tool/doc.go > \
# 			"$subpkgdir"/usr/lib/go/src/pkg/$tool/doc.go
# 	done
# }
